/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// WorkflowStopRequest struct for WorkflowStopRequest
type WorkflowStopRequest struct {
	WorkflowId string `json:"workflowId"`
	WorkflowRunId *string `json:"workflowRunId,omitempty"`
	Reason *string `json:"reason,omitempty"`
	StopType *WorkflowStopType `json:"stopType,omitempty"`
}

// NewWorkflowStopRequest instantiates a new WorkflowStopRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowStopRequest(workflowId string) *WorkflowStopRequest {
	this := WorkflowStopRequest{}
	this.WorkflowId = workflowId
	return &this
}

// NewWorkflowStopRequestWithDefaults instantiates a new WorkflowStopRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowStopRequestWithDefaults() *WorkflowStopRequest {
	this := WorkflowStopRequest{}
	return &this
}

// GetWorkflowId returns the WorkflowId field value
func (o *WorkflowStopRequest) GetWorkflowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
func (o *WorkflowStopRequest) GetWorkflowIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *WorkflowStopRequest) SetWorkflowId(v string) {
	o.WorkflowId = v
}

// GetWorkflowRunId returns the WorkflowRunId field value if set, zero value otherwise.
func (o *WorkflowStopRequest) GetWorkflowRunId() string {
	if o == nil || isNil(o.WorkflowRunId) {
		var ret string
		return ret
	}
	return *o.WorkflowRunId
}

// GetWorkflowRunIdOk returns a tuple with the WorkflowRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStopRequest) GetWorkflowRunIdOk() (*string, bool) {
	if o == nil || isNil(o.WorkflowRunId) {
    return nil, false
	}
	return o.WorkflowRunId, true
}

// HasWorkflowRunId returns a boolean if a field has been set.
func (o *WorkflowStopRequest) HasWorkflowRunId() bool {
	if o != nil && !isNil(o.WorkflowRunId) {
		return true
	}

	return false
}

// SetWorkflowRunId gets a reference to the given string and assigns it to the WorkflowRunId field.
func (o *WorkflowStopRequest) SetWorkflowRunId(v string) {
	o.WorkflowRunId = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *WorkflowStopRequest) GetReason() string {
	if o == nil || isNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStopRequest) GetReasonOk() (*string, bool) {
	if o == nil || isNil(o.Reason) {
    return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *WorkflowStopRequest) HasReason() bool {
	if o != nil && !isNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *WorkflowStopRequest) SetReason(v string) {
	o.Reason = &v
}

// GetStopType returns the StopType field value if set, zero value otherwise.
func (o *WorkflowStopRequest) GetStopType() WorkflowStopType {
	if o == nil || isNil(o.StopType) {
		var ret WorkflowStopType
		return ret
	}
	return *o.StopType
}

// GetStopTypeOk returns a tuple with the StopType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStopRequest) GetStopTypeOk() (*WorkflowStopType, bool) {
	if o == nil || isNil(o.StopType) {
    return nil, false
	}
	return o.StopType, true
}

// HasStopType returns a boolean if a field has been set.
func (o *WorkflowStopRequest) HasStopType() bool {
	if o != nil && !isNil(o.StopType) {
		return true
	}

	return false
}

// SetStopType gets a reference to the given WorkflowStopType and assigns it to the StopType field.
func (o *WorkflowStopRequest) SetStopType(v WorkflowStopType) {
	o.StopType = &v
}

func (o WorkflowStopRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["workflowId"] = o.WorkflowId
	}
	if !isNil(o.WorkflowRunId) {
		toSerialize["workflowRunId"] = o.WorkflowRunId
	}
	if !isNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !isNil(o.StopType) {
		toSerialize["stopType"] = o.StopType
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowStopRequest struct {
	value *WorkflowStopRequest
	isSet bool
}

func (v NullableWorkflowStopRequest) Get() *WorkflowStopRequest {
	return v.value
}

func (v *NullableWorkflowStopRequest) Set(val *WorkflowStopRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowStopRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowStopRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowStopRequest(val *WorkflowStopRequest) *NullableWorkflowStopRequest {
	return &NullableWorkflowStopRequest{value: val, isSet: true}
}

func (v NullableWorkflowStopRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowStopRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


