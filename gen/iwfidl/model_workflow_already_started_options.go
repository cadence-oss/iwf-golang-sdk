/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// checks if the WorkflowAlreadyStartedOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowAlreadyStartedOptions{}

// WorkflowAlreadyStartedOptions struct for WorkflowAlreadyStartedOptions
type WorkflowAlreadyStartedOptions struct {
	IgnoreAlreadyStartedError bool    `json:"ignoreAlreadyStartedError"`
	RequestId                 *string `json:"requestId,omitempty"`
}

// NewWorkflowAlreadyStartedOptions instantiates a new WorkflowAlreadyStartedOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowAlreadyStartedOptions(ignoreAlreadyStartedError bool) *WorkflowAlreadyStartedOptions {
	this := WorkflowAlreadyStartedOptions{}
	this.IgnoreAlreadyStartedError = ignoreAlreadyStartedError
	return &this
}

// NewWorkflowAlreadyStartedOptionsWithDefaults instantiates a new WorkflowAlreadyStartedOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowAlreadyStartedOptionsWithDefaults() *WorkflowAlreadyStartedOptions {
	this := WorkflowAlreadyStartedOptions{}
	return &this
}

// GetIgnoreAlreadyStartedError returns the IgnoreAlreadyStartedError field value
func (o *WorkflowAlreadyStartedOptions) GetIgnoreAlreadyStartedError() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IgnoreAlreadyStartedError
}

// GetIgnoreAlreadyStartedErrorOk returns a tuple with the IgnoreAlreadyStartedError field value
// and a boolean to check if the value has been set.
func (o *WorkflowAlreadyStartedOptions) GetIgnoreAlreadyStartedErrorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IgnoreAlreadyStartedError, true
}

// SetIgnoreAlreadyStartedError sets field value
func (o *WorkflowAlreadyStartedOptions) SetIgnoreAlreadyStartedError(v bool) {
	o.IgnoreAlreadyStartedError = v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *WorkflowAlreadyStartedOptions) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAlreadyStartedOptions) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *WorkflowAlreadyStartedOptions) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *WorkflowAlreadyStartedOptions) SetRequestId(v string) {
	o.RequestId = &v
}

func (o WorkflowAlreadyStartedOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowAlreadyStartedOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ignoreAlreadyStartedError"] = o.IgnoreAlreadyStartedError
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	return toSerialize, nil
}

type NullableWorkflowAlreadyStartedOptions struct {
	value *WorkflowAlreadyStartedOptions
	isSet bool
}

func (v NullableWorkflowAlreadyStartedOptions) Get() *WorkflowAlreadyStartedOptions {
	return v.value
}

func (v *NullableWorkflowAlreadyStartedOptions) Set(val *WorkflowAlreadyStartedOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowAlreadyStartedOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowAlreadyStartedOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowAlreadyStartedOptions(val *WorkflowAlreadyStartedOptions) *NullableWorkflowAlreadyStartedOptions {
	return &NullableWorkflowAlreadyStartedOptions{value: val, isSet: true}
}

func (v NullableWorkflowAlreadyStartedOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowAlreadyStartedOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
