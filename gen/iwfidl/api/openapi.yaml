openapi: 3.0.0
info:
  description: This APIs for iwf SDKs to operate workflows
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Workflow APIs
  version: 1.0.0
servers:
- url: http://petstore.swagger.io/v2
paths:
  /api/v1/workflow/start:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStartRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStartResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: start a workflow
  /api/v1/workflow/signal:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowSignalRequest'
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: signal a workflow
  /api/v1/workflow/stop:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStopRequest'
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: stop a workflow
  /api/v1/workflow/dataobjects/get:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowGetDataObjectsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetDataObjectsResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: get workflow data objects
  /api/v1/workflow/searchattributes/get:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowGetSearchAttributesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetSearchAttributesResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: get workflow search attributes
  /api/v1/workflow/get:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowGetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: get a workflow's status and results(if completed & requested)
  /api/v1/workflow/getWithWait:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowGetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: "get a workflow's status and results(if completed & requested), wait\
        \ if the workflow is still running"
  /api/v1/workflow/search:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowSearchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowSearchResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: search for workflows by a search attribute query
  /api/v1/workflow/reset:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowResetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowResetResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: reset a workflow
  /api/v1/workflowState/start:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStateStartRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStateStartResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: for invoking WorkflowState.start API
  /api/v1/workflowState/decide:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStateDecideRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStateDecideResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: for invoking WorkflowState.decide API
components:
  schemas:
    KeyValue:
      example:
        value:
          data: data
          encoding: encoding
        key: key
      properties:
        key:
          type: string
        value:
          $ref: '#/components/schemas/EncodedObject'
      type: object
    EncodedObject:
      example:
        data: data
        encoding: encoding
      properties:
        encoding:
          type: string
        data:
          type: string
      type: object
    SearchAttributeKeyAndType:
      example:
        valueType: null
        key: key
      properties:
        key:
          type: string
        valueType:
          $ref: '#/components/schemas/SearchAttributeValueType'
      type: object
    SearchAttributeValueType:
      enum:
      - KEYWORD
      - TEXT
      - DATETIME
      - INT
      - DOUBLE
      - BOOL
      - KEYWORD_ARRAY
      type: string
    SearchAttribute:
      example:
        stringValue: stringValue
        valueType: null
        integerValue: 9
        boolValue: true
        doubleValue: 3.616076749251911
        stringArrayValue:
        - stringArrayValue
        - stringArrayValue
        key: key
      properties:
        key:
          type: string
        stringValue:
          type: string
        integerValue:
          format: int64
          type: integer
        doubleValue:
          format: double
          type: number
        boolValue:
          type: boolean
        stringArrayValue:
          items:
            type: string
          type: array
        valueType:
          $ref: '#/components/schemas/SearchAttributeValueType'
      type: object
    RetryPolicy:
      example:
        maximumAttempts: 7
        initialIntervalSeconds: 5
        maximumIntervalSeconds: 2
        backoffCoefficient: 5.637376656633329
      properties:
        initialIntervalSeconds:
          type: integer
        backoffCoefficient:
          type: number
        maximumIntervalSeconds:
          type: integer
        maximumAttempts:
          type: integer
      type: object
    WorkflowStateOptions:
      example:
        searchAttributesLoadingPolicy:
          partialLoadingKeys:
          - partialLoadingKeys
          - partialLoadingKeys
          persistenceLoadingType: null
        commandCarryOverPolicy:
          commandCarryOverType: null
        decideApiRetryPolicy:
          maximumAttempts: 7
          initialIntervalSeconds: 5
          maximumIntervalSeconds: 2
          backoffCoefficient: 5.637376656633329
        decideApiTimeoutSeconds: 1
        startApiTimeoutSeconds: 6
        startApiRetryPolicy:
          maximumAttempts: 7
          initialIntervalSeconds: 5
          maximumIntervalSeconds: 2
          backoffCoefficient: 5.637376656633329
        dataObjectsLoadingPolicy:
          partialLoadingKeys:
          - partialLoadingKeys
          - partialLoadingKeys
          persistenceLoadingType: null
      properties:
        searchAttributesLoadingPolicy:
          $ref: '#/components/schemas/PersistenceLoadingPolicy'
        dataObjectsLoadingPolicy:
          $ref: '#/components/schemas/PersistenceLoadingPolicy'
        commandCarryOverPolicy:
          $ref: '#/components/schemas/CommandCarryOverPolicy'
        startApiTimeoutSeconds:
          type: integer
        decideApiTimeoutSeconds:
          type: integer
        startApiRetryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
        decideApiRetryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
      type: object
    WorkflowStartOptions:
      example:
        retryPolicy:
          maximumAttempts: 7
          initialIntervalSeconds: 5
          maximumIntervalSeconds: 2
          backoffCoefficient: 5.637376656633329
        searchAttributes:
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        workflowIDReusePolicy: null
        cronSchedule: cronSchedule
      properties:
        workflowIDReusePolicy:
          $ref: '#/components/schemas/WorkflowIDReusePolicy'
        cronSchedule:
          type: string
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
        searchAttributes:
          items:
            $ref: '#/components/schemas/SearchAttribute'
          type: array
      type: object
    WorkflowIDReusePolicy:
      enum:
      - ALLOW_DUPLICATE_FAILED_ONLY
      - ALLOW_DUPLICATE
      - REJECT_DUPLICATE
      - TERMINATE_IF_RUNNING
      type: string
    PersistenceLoadingPolicy:
      example:
        partialLoadingKeys:
        - partialLoadingKeys
        - partialLoadingKeys
        persistenceLoadingType: null
      properties:
        persistenceLoadingType:
          $ref: '#/components/schemas/PersistenceLoadingType'
        partialLoadingKeys:
          items:
            type: string
          type: array
      type: object
    PersistenceLoadingType:
      enum:
      - LOAD_ALL_WITHOUT_LOCKING
      - LOAD_PARTIAL_WITHOUT_LOCKING
      type: string
    CommandCarryOverPolicy:
      example:
        commandCarryOverType: null
      properties:
        commandCarryOverType:
          $ref: '#/components/schemas/CommandCarryOverType'
      type: object
    CommandCarryOverType:
      enum:
      - NONE
      type: string
    ErrorResponse:
      properties:
        detail:
          type: string
        subStatus:
          type: string
      type: object
    WorkflowStartRequest:
      example:
        startStateId: startStateId
        workflowTimeoutSeconds: 0
        stateOptions:
          searchAttributesLoadingPolicy:
            partialLoadingKeys:
            - partialLoadingKeys
            - partialLoadingKeys
            persistenceLoadingType: null
          commandCarryOverPolicy:
            commandCarryOverType: null
          decideApiRetryPolicy:
            maximumAttempts: 7
            initialIntervalSeconds: 5
            maximumIntervalSeconds: 2
            backoffCoefficient: 5.637376656633329
          decideApiTimeoutSeconds: 1
          startApiTimeoutSeconds: 6
          startApiRetryPolicy:
            maximumAttempts: 7
            initialIntervalSeconds: 5
            maximumIntervalSeconds: 2
            backoffCoefficient: 5.637376656633329
          dataObjectsLoadingPolicy:
            partialLoadingKeys:
            - partialLoadingKeys
            - partialLoadingKeys
            persistenceLoadingType: null
        iwfWorkflowType: iwfWorkflowType
        workflowStartOptions:
          retryPolicy:
            maximumAttempts: 7
            initialIntervalSeconds: 5
            maximumIntervalSeconds: 2
            backoffCoefficient: 5.637376656633329
          searchAttributes:
          - stringValue: stringValue
            valueType: null
            integerValue: 9
            boolValue: true
            doubleValue: 3.616076749251911
            stringArrayValue:
            - stringArrayValue
            - stringArrayValue
            key: key
          - stringValue: stringValue
            valueType: null
            integerValue: 9
            boolValue: true
            doubleValue: 3.616076749251911
            stringArrayValue:
            - stringArrayValue
            - stringArrayValue
            key: key
          workflowIDReusePolicy: null
          cronSchedule: cronSchedule
        iwfWorkerUrl: iwfWorkerUrl
        workflowId: workflowId
        stateInput:
          data: data
          encoding: encoding
      properties:
        workflowId:
          type: string
        iwfWorkflowType:
          type: string
        workflowTimeoutSeconds:
          type: integer
        iwfWorkerUrl:
          type: string
        startStateId:
          type: string
        stateInput:
          $ref: '#/components/schemas/EncodedObject'
        stateOptions:
          $ref: '#/components/schemas/WorkflowStateOptions'
        workflowStartOptions:
          $ref: '#/components/schemas/WorkflowStartOptions'
      required:
      - iwfWorkerUrl
      - iwfWorkflowType
      - startStateId
      - workflowId
      - workflowTimeoutSeconds
      type: object
    WorkflowStartResponse:
      example:
        workflowRunId: workflowRunId
      properties:
        workflowRunId:
          type: string
      type: object
    WorkflowSignalRequest:
      example:
        signalChannelName: signalChannelName
        workflowRunId: workflowRunId
        workflowId: workflowId
        signalValue:
          data: data
          encoding: encoding
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        signalChannelName:
          type: string
        signalValue:
          $ref: '#/components/schemas/EncodedObject'
      required:
      - signalChannelName
      - workflowId
      type: object
    WorkflowStopRequest:
      example:
        reason: reason
        stopType: null
        workflowRunId: workflowRunId
        workflowId: workflowId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        reason:
          type: string
        stopType:
          $ref: '#/components/schemas/WorkflowStopType'
      required:
      - workflowId
      type: object
    WorkflowStopType:
      enum:
      - CANCEL
      type: string
    WorkflowGetDataObjectsRequest:
      example:
        keys:
        - keys
        - keys
        workflowRunId: workflowRunId
        workflowId: workflowId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        keys:
          items:
            type: string
          type: array
      required:
      - workflowId
      type: object
    WorkflowGetDataObjectsResponse:
      example:
        objects:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
      properties:
        objects:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
      type: object
    WorkflowGetSearchAttributesRequest:
      example:
        keys:
        - valueType: null
          key: key
        - valueType: null
          key: key
        workflowRunId: workflowRunId
        workflowId: workflowId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        keys:
          items:
            $ref: '#/components/schemas/SearchAttributeKeyAndType'
          type: array
      required:
      - workflowId
      type: object
    WorkflowGetSearchAttributesResponse:
      example:
        searchAttributes:
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
      properties:
        searchAttributes:
          items:
            $ref: '#/components/schemas/SearchAttribute'
          type: array
      type: object
    WorkflowGetRequest:
      example:
        waitTimeSeconds: 0
        needsResults: true
        workflowRunId: workflowRunId
        workflowId: workflowId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        needsResults:
          type: boolean
        waitTimeSeconds:
          type: integer
      required:
      - workflowId
      type: object
    WorkflowGetResponse:
      example:
        workflowStatus: null
        workflowRunId: workflowRunId
        results:
        - completedStateOutput:
            data: data
            encoding: encoding
          completedStateExecutionId: completedStateExecutionId
          completedStateId: completedStateId
        - completedStateOutput:
            data: data
            encoding: encoding
          completedStateExecutionId: completedStateExecutionId
          completedStateId: completedStateId
      properties:
        workflowRunId:
          type: string
        workflowStatus:
          $ref: '#/components/schemas/WorkflowStatus'
        results:
          items:
            $ref: '#/components/schemas/StateCompletionOutput'
          type: array
      required:
      - workflowRunId
      - workflowStatus
      type: object
    WorkflowStatus:
      enum:
      - RUNNING
      - COMPLETED
      - FAILED
      - TIMEOUT
      - TERMINATED
      - CANCELED
      - CONTINUED_AS_NEW
      type: string
    StateCompletionOutput:
      example:
        completedStateOutput:
          data: data
          encoding: encoding
        completedStateExecutionId: completedStateExecutionId
        completedStateId: completedStateId
      properties:
        completedStateId:
          type: string
        completedStateExecutionId:
          type: string
        completedStateOutput:
          $ref: '#/components/schemas/EncodedObject'
      required:
      - completedStateExecutionId
      - completedStateId
      type: object
    WorkflowSearchRequest:
      example:
        nextPageToken: nextPageToken
        query: query
        pageSize: 0
      properties:
        query:
          type: string
        pageSize:
          format: int32
          type: integer
        nextPageToken:
          type: string
      required:
      - query
      type: object
    WorkflowSearchResponse:
      example:
        nextPageToken: nextPageToken
        workflowExecutions:
        - workflowRunId: workflowRunId
          workflowId: workflowId
        - workflowRunId: workflowRunId
          workflowId: workflowId
      properties:
        workflowExecutions:
          items:
            $ref: '#/components/schemas/WorkflowSearchResponseEntry'
          type: array
        nextPageToken:
          type: string
      type: object
    WorkflowSearchResponseEntry:
      example:
        workflowRunId: workflowRunId
        workflowId: workflowId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
      required:
      - workflowId
      - workflowRunId
      type: object
    WorkflowResetRequest:
      example:
        reason: reason
        historyEventId: 0
        historyEventTime: historyEventTime
        stateId: stateId
        resetType: null
        skipSignalReapply: true
        workflowRunId: workflowRunId
        workflowId: workflowId
        stateExecutionId: stateExecutionId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        resetType:
          $ref: '#/components/schemas/WorkflowResetType'
        historyEventId:
          type: integer
        reason:
          type: string
        historyEventTime:
          type: string
        stateId:
          type: string
        stateExecutionId:
          type: string
        skipSignalReapply:
          type: boolean
      required:
      - resetType
      - workflowId
      type: object
    WorkflowResetType:
      enum:
      - HISTORY_EVENT_ID
      - BEGINNING
      - HISTORY_EVENT_TIME
      - STATE_ID
      - STATE_EXECUTION_ID
      type: string
    WorkflowResetResponse:
      example:
        workflowRunId: workflowRunId
      properties:
        workflowRunId:
          type: string
      required:
      - workflowRunId
      type: object
    WorkflowStateStartRequest:
      example:
        dataObjects:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        workflowStateId: workflowStateId
        context:
          workflowStartedTimestamp: 0
          workflowRunId: workflowRunId
          workflowId: workflowId
          stateExecutionId: stateExecutionId
        workflowType: workflowType
        searchAttributes:
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        stateInput:
          data: data
          encoding: encoding
      properties:
        context:
          $ref: '#/components/schemas/Context'
        workflowType:
          type: string
        workflowStateId:
          type: string
        stateInput:
          $ref: '#/components/schemas/EncodedObject'
        searchAttributes:
          items:
            $ref: '#/components/schemas/SearchAttribute'
          type: array
        dataObjects:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
      required:
      - context
      - workflowStateId
      - workflowType
      type: object
    WorkflowStateStartResponse:
      example:
        upsertSearchAttributes:
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        recordEvents:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        commandRequest:
          signalCommands:
          - signalChannelName: signalChannelName
            commandId: commandId
          - signalChannelName: signalChannelName
            commandId: commandId
          timerCommands:
          - firingUnixTimestampSeconds: 0
            commandId: commandId
          - firingUnixTimestampSeconds: 0
            commandId: commandId
          deciderTriggerType: null
          interStateChannelCommands:
          - channelName: channelName
            commandId: commandId
          - channelName: channelName
            commandId: commandId
        publishToInterStateChannel:
        - channelName: channelName
          value:
            data: data
            encoding: encoding
        - channelName: channelName
          value:
            data: data
            encoding: encoding
        upsertStateLocals:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        upsertDataObjects:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
      properties:
        upsertSearchAttributes:
          items:
            $ref: '#/components/schemas/SearchAttribute'
          type: array
        upsertDataObjects:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        commandRequest:
          $ref: '#/components/schemas/CommandRequest'
        upsertStateLocals:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        recordEvents:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        publishToInterStateChannel:
          items:
            $ref: '#/components/schemas/InterStateChannelPublishing'
          type: array
      type: object
    WorkflowStateDecideRequest:
      example:
        stateLocals:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        workflowStateId: workflowStateId
        commandResults:
          signalResults:
          - signalRequestStatus: null
            signalChannelName: signalChannelName
            commandId: commandId
            signalValue:
              data: data
              encoding: encoding
          - signalRequestStatus: null
            signalChannelName: signalChannelName
            commandId: commandId
            signalValue:
              data: data
              encoding: encoding
          interStateChannelResults:
          - channelName: channelName
            commandId: commandId
            value:
              data: data
              encoding: encoding
            requestStatus: null
          - channelName: channelName
            commandId: commandId
            value:
              data: data
              encoding: encoding
            requestStatus: null
          timerResults:
          - timerStatus: null
            commandId: commandId
          - timerStatus: null
            commandId: commandId
        context:
          workflowStartedTimestamp: 0
          workflowRunId: workflowRunId
          workflowId: workflowId
          stateExecutionId: stateExecutionId
        workflowType: workflowType
        searchAttributes:
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        DataObjects:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        stateInput:
          data: data
          encoding: encoding
      properties:
        context:
          $ref: '#/components/schemas/Context'
        workflowType:
          type: string
        workflowStateId:
          type: string
        stateInput:
          $ref: '#/components/schemas/EncodedObject'
        searchAttributes:
          items:
            $ref: '#/components/schemas/SearchAttribute'
          type: array
        DataObjects:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        stateLocals:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        commandResults:
          $ref: '#/components/schemas/CommandResults'
      required:
      - context
      - workflowStateId
      - workflowType
      type: object
    WorkflowStateDecideResponse:
      example:
        upsertSearchAttributes:
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        - stringValue: stringValue
          valueType: null
          integerValue: 9
          boolValue: true
          doubleValue: 3.616076749251911
          stringArrayValue:
          - stringArrayValue
          - stringArrayValue
          key: key
        recordEvents:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        stateDecision:
          nextStates:
          - stateId: stateId
            stateOptions:
              searchAttributesLoadingPolicy:
                partialLoadingKeys:
                - partialLoadingKeys
                - partialLoadingKeys
                persistenceLoadingType: null
              commandCarryOverPolicy:
                commandCarryOverType: null
              decideApiRetryPolicy:
                maximumAttempts: 7
                initialIntervalSeconds: 5
                maximumIntervalSeconds: 2
                backoffCoefficient: 5.637376656633329
              decideApiTimeoutSeconds: 1
              startApiTimeoutSeconds: 6
              startApiRetryPolicy:
                maximumAttempts: 7
                initialIntervalSeconds: 5
                maximumIntervalSeconds: 2
                backoffCoefficient: 5.637376656633329
              dataObjectsLoadingPolicy:
                partialLoadingKeys:
                - partialLoadingKeys
                - partialLoadingKeys
                persistenceLoadingType: null
            stateInput:
              data: data
              encoding: encoding
          - stateId: stateId
            stateOptions:
              searchAttributesLoadingPolicy:
                partialLoadingKeys:
                - partialLoadingKeys
                - partialLoadingKeys
                persistenceLoadingType: null
              commandCarryOverPolicy:
                commandCarryOverType: null
              decideApiRetryPolicy:
                maximumAttempts: 7
                initialIntervalSeconds: 5
                maximumIntervalSeconds: 2
                backoffCoefficient: 5.637376656633329
              decideApiTimeoutSeconds: 1
              startApiTimeoutSeconds: 6
              startApiRetryPolicy:
                maximumAttempts: 7
                initialIntervalSeconds: 5
                maximumIntervalSeconds: 2
                backoffCoefficient: 5.637376656633329
              dataObjectsLoadingPolicy:
                partialLoadingKeys:
                - partialLoadingKeys
                - partialLoadingKeys
                persistenceLoadingType: null
            stateInput:
              data: data
              encoding: encoding
        publishToInterStateChannel:
        - channelName: channelName
          value:
            data: data
            encoding: encoding
        - channelName: channelName
          value:
            data: data
            encoding: encoding
        upsertStateLocals:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        upsertDataObjects:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
      properties:
        stateDecision:
          $ref: '#/components/schemas/StateDecision'
        upsertSearchAttributes:
          items:
            $ref: '#/components/schemas/SearchAttribute'
          type: array
        upsertDataObjects:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        recordEvents:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        upsertStateLocals:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        publishToInterStateChannel:
          items:
            $ref: '#/components/schemas/InterStateChannelPublishing'
          type: array
      type: object
    StateDecision:
      example:
        nextStates:
        - stateId: stateId
          stateOptions:
            searchAttributesLoadingPolicy:
              partialLoadingKeys:
              - partialLoadingKeys
              - partialLoadingKeys
              persistenceLoadingType: null
            commandCarryOverPolicy:
              commandCarryOverType: null
            decideApiRetryPolicy:
              maximumAttempts: 7
              initialIntervalSeconds: 5
              maximumIntervalSeconds: 2
              backoffCoefficient: 5.637376656633329
            decideApiTimeoutSeconds: 1
            startApiTimeoutSeconds: 6
            startApiRetryPolicy:
              maximumAttempts: 7
              initialIntervalSeconds: 5
              maximumIntervalSeconds: 2
              backoffCoefficient: 5.637376656633329
            dataObjectsLoadingPolicy:
              partialLoadingKeys:
              - partialLoadingKeys
              - partialLoadingKeys
              persistenceLoadingType: null
          stateInput:
            data: data
            encoding: encoding
        - stateId: stateId
          stateOptions:
            searchAttributesLoadingPolicy:
              partialLoadingKeys:
              - partialLoadingKeys
              - partialLoadingKeys
              persistenceLoadingType: null
            commandCarryOverPolicy:
              commandCarryOverType: null
            decideApiRetryPolicy:
              maximumAttempts: 7
              initialIntervalSeconds: 5
              maximumIntervalSeconds: 2
              backoffCoefficient: 5.637376656633329
            decideApiTimeoutSeconds: 1
            startApiTimeoutSeconds: 6
            startApiRetryPolicy:
              maximumAttempts: 7
              initialIntervalSeconds: 5
              maximumIntervalSeconds: 2
              backoffCoefficient: 5.637376656633329
            dataObjectsLoadingPolicy:
              partialLoadingKeys:
              - partialLoadingKeys
              - partialLoadingKeys
              persistenceLoadingType: null
          stateInput:
            data: data
            encoding: encoding
      properties:
        nextStates:
          items:
            $ref: '#/components/schemas/StateMovement'
          type: array
      type: object
    StateMovement:
      example:
        stateId: stateId
        stateOptions:
          searchAttributesLoadingPolicy:
            partialLoadingKeys:
            - partialLoadingKeys
            - partialLoadingKeys
            persistenceLoadingType: null
          commandCarryOverPolicy:
            commandCarryOverType: null
          decideApiRetryPolicy:
            maximumAttempts: 7
            initialIntervalSeconds: 5
            maximumIntervalSeconds: 2
            backoffCoefficient: 5.637376656633329
          decideApiTimeoutSeconds: 1
          startApiTimeoutSeconds: 6
          startApiRetryPolicy:
            maximumAttempts: 7
            initialIntervalSeconds: 5
            maximumIntervalSeconds: 2
            backoffCoefficient: 5.637376656633329
          dataObjectsLoadingPolicy:
            partialLoadingKeys:
            - partialLoadingKeys
            - partialLoadingKeys
            persistenceLoadingType: null
        stateInput:
          data: data
          encoding: encoding
      properties:
        stateId:
          type: string
        stateInput:
          $ref: '#/components/schemas/EncodedObject'
        stateOptions:
          $ref: '#/components/schemas/WorkflowStateOptions'
      required:
      - stateId
      type: object
    CommandRequest:
      example:
        signalCommands:
        - signalChannelName: signalChannelName
          commandId: commandId
        - signalChannelName: signalChannelName
          commandId: commandId
        timerCommands:
        - firingUnixTimestampSeconds: 0
          commandId: commandId
        - firingUnixTimestampSeconds: 0
          commandId: commandId
        deciderTriggerType: null
        interStateChannelCommands:
        - channelName: channelName
          commandId: commandId
        - channelName: channelName
          commandId: commandId
      properties:
        deciderTriggerType:
          $ref: '#/components/schemas/DeciderTriggerType'
        timerCommands:
          items:
            $ref: '#/components/schemas/TimerCommand'
          type: array
        signalCommands:
          items:
            $ref: '#/components/schemas/SignalCommand'
          type: array
        interStateChannelCommands:
          items:
            $ref: '#/components/schemas/InterStateChannelCommand'
          type: array
      required:
      - deciderTriggerType
      type: object
    DeciderTriggerType:
      enum:
      - ALL_COMMAND_COMPLETED
      - ANY_COMMAND_COMPLETED
      type: string
    CommandResults:
      example:
        signalResults:
        - signalRequestStatus: null
          signalChannelName: signalChannelName
          commandId: commandId
          signalValue:
            data: data
            encoding: encoding
        - signalRequestStatus: null
          signalChannelName: signalChannelName
          commandId: commandId
          signalValue:
            data: data
            encoding: encoding
        interStateChannelResults:
        - channelName: channelName
          commandId: commandId
          value:
            data: data
            encoding: encoding
          requestStatus: null
        - channelName: channelName
          commandId: commandId
          value:
            data: data
            encoding: encoding
          requestStatus: null
        timerResults:
        - timerStatus: null
          commandId: commandId
        - timerStatus: null
          commandId: commandId
      properties:
        signalResults:
          items:
            $ref: '#/components/schemas/SignalResult'
          type: array
        interStateChannelResults:
          items:
            $ref: '#/components/schemas/InterStateChannelResult'
          type: array
        timerResults:
          items:
            $ref: '#/components/schemas/TimerResult'
          type: array
      type: object
    TimerCommand:
      example:
        firingUnixTimestampSeconds: 0
        commandId: commandId
      properties:
        commandId:
          type: string
        firingUnixTimestampSeconds:
          format: int64
          type: integer
      required:
      - commandId
      - firingUnixTimestampSeconds
      type: object
    SignalCommand:
      example:
        signalChannelName: signalChannelName
        commandId: commandId
      properties:
        commandId:
          type: string
        signalChannelName:
          type: string
      required:
      - commandId
      - signalChannelName
      type: object
    InterStateChannelCommand:
      example:
        channelName: channelName
        commandId: commandId
      properties:
        commandId:
          type: string
        channelName:
          type: string
      required:
      - channelName
      - commandId
      type: object
    TimerResult:
      example:
        timerStatus: null
        commandId: commandId
      properties:
        commandId:
          type: string
        timerStatus:
          $ref: '#/components/schemas/TimerStatus'
      required:
      - commandId
      - timerStatus
      type: object
    TimerStatus:
      enum:
      - SCHEDULED
      - FIRED
      type: string
    SignalResult:
      example:
        signalRequestStatus: null
        signalChannelName: signalChannelName
        commandId: commandId
        signalValue:
          data: data
          encoding: encoding
      properties:
        commandId:
          type: string
        signalRequestStatus:
          $ref: '#/components/schemas/ChannelRequestStatus'
        signalChannelName:
          type: string
        signalValue:
          $ref: '#/components/schemas/EncodedObject'
      required:
      - commandId
      - signalChannelName
      - signalRequestStatus
      type: object
    InterStateChannelResult:
      example:
        channelName: channelName
        commandId: commandId
        value:
          data: data
          encoding: encoding
        requestStatus: null
      properties:
        commandId:
          type: string
        requestStatus:
          $ref: '#/components/schemas/ChannelRequestStatus'
        channelName:
          type: string
        value:
          $ref: '#/components/schemas/EncodedObject'
      required:
      - channelName
      - commandId
      - requestStatus
      type: object
    ChannelRequestStatus:
      enum:
      - WAITING
      - RECEIVED
      type: string
    InterStateChannelPublishing:
      example:
        channelName: channelName
        value:
          data: data
          encoding: encoding
      properties:
        channelName:
          type: string
        value:
          $ref: '#/components/schemas/EncodedObject'
      required:
      - channelName
      type: object
    Context:
      example:
        workflowStartedTimestamp: 0
        workflowRunId: workflowRunId
        workflowId: workflowId
        stateExecutionId: stateExecutionId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        workflowStartedTimestamp:
          format: int64
          type: integer
        stateExecutionId:
          type: string
      required:
      - commandId
      - stateExecutionId
      - workflowId
      - workflowRunId
      - workflowStartedTimestamp
      type: object
